{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","services/persons.js","App.js","serviceWorker.js","index.js"],"names":["Filter","_ref","persons","setFilteredPersons","react_default","a","createElement","onChange","event","console","log","target","value","filter","person","name","toLowerCase","includes","PersonForm","addPerson","_useState","useState","_useState2","Object","slicedToArray","newName","setNewName","_useState3","_useState4","newNumber","setNewNumber","type","disabled","onClick","preventDefault","newPerson","number","Person","deletePerson","baseUrl","services_persons","axios","get","then","response","data","post","id","updatedPerson","put","concat","delete","App","setPersons","filteredPersons","useEffect","personServices","components_Filter","components_PersonForm","existedPerson","find","undefined","window","confirm","style","listStyleType","length","map","components_Person","key","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad0acff2.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ persons, setFilteredPersons }) => {\n  const handleFilter = (event) => {\n\n    console.log(event.target.value)\n\n    event.target.value === ''\n    ? setFilteredPersons([])\n    : setFilteredPersons(persons.filter(person => person.name.toLowerCase().includes(event.target.value)))\n\n  }\n\n  return (\n    <div>Filter shown with <input onChange={handleFilter}/></div>    \n  )\n}\n\nexport default Filter\n","import React, { useState } from 'react'\n\nconst PersonForm = ({ addPerson }) => {\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    } \n\n    addPerson(newPerson)\n\n    setNewName('')\n    setNewNumber('')\n\n    return newPerson\n  }\n\n  return (\n    <form>\n      <div>\n        <div>name: <input name=\"name\" value={newName} onChange={handleNameChange}/></div>\n        <div>number: <input name=\"number\" value={newNumber} onChange={handleNumberChange}/></div>\n      </div>\n      <div>\n        <button type=\"submit\" disabled={!newName || !newNumber} onClick={handleSubmit}>add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n  return (<li>{person.name} {person.number}<button onClick={deletePerson}>delete</button></li>)\n}\n\nexport default Person\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst update = (id, updatedPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson)\n  return request.then(response => response.data)\n}\n\nconst del = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll, \n  create, \n  update,\n  del\n}","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Person from './components/Person';\nimport personServices from './services/persons';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ filteredPersons, setFilteredPersons ] = useState([])\n\n  useEffect(() => {\n    personServices\n      .getAll()\n      .then(data => setPersons(data))\n  }, [])\n\n  const addPerson = (newPerson) => {\n    const existedPerson = persons.find(person => person.name === newPerson.name)\n    \n    const updatePerson = () => {\n      const confirm = window.confirm(`${existedPerson.name} is already added to the phonebook. Do you want to replace?`)\n\n      if (confirm) {\n        personServices.update(existedPerson.id, newPerson).then(() => personServices.getAll().then(data => setPersons(data)))\n      }\n    }\n\n    const createPerson = () => {\n      personServices.create(newPerson).then(() => personServices.getAll().then(data => setPersons(data)))\n    }\n\n    existedPerson !== undefined\n    ? updatePerson()\n    : createPerson()\n  }\n\n  const deletePerson = (id) => {\n    const confirm = window.confirm(\"Do you want to delete?\")\n\n    if (confirm) {\n      personServices.del(id).then(() => personServices.getAll().then(data => setPersons(data)))\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter persons={persons} setFilteredPersons={setFilteredPersons} />\n      <h2>Add a new number</h2> \n      <PersonForm addPerson={person => addPerson(person)}/>\n      <h2>Numbers</h2>\n      <ul style={{listStyleType: 'none'}}>\n        { filteredPersons.length === 0\n          ? persons.map(person => <Person key={person.id} person={person}  \n                                          deletePerson={() => deletePerson(person.id)}/>)\n          : filteredPersons.map(person => <Person key={person.number} person={person}  />)}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}